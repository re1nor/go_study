// formatting - глаголы форматирования, форматирование значений ширины и форматирование с дробными значениями ширины
package main

import "fmt"

func main() {
	// Глаголы форматирования
	// %f - Число с плавающей точкой
	fmt.Printf("A float: %f\n", 3.1415926535)
	// %d - Десятичное целое число
	fmt.Printf("A integer: %d\n", 15)
	// %s - Строка
	fmt.Printf("A string: %s\n", "Bulat")
	// %t - Логическое значение (true или false)
	fmt.Printf("A boolean: %t\n", false)
	// %v - Произвольное значение (подходящий формат выбирается на основании типа передаваемого значения)
	fmt.Printf("Values: %v %v %v\n", 1.2, "\t", true)
	// %#v - Произвольное значение, отформатированное в том виде, в котором оно отображается в коде Go
	fmt.Printf("Values: %#v %#v %#v\n", 1.2, "\t", true)
	// %T - Тип переданного значения (int, string и т.п.)
	fmt.Printf("Types: %T %T %T\n", 1.2, "\t", true)
	// %% - Знак процента (литерал)
	fmt.Printf("Percent sign: %%\n")

	/* Обратите внимание: в конец каждой форматной строки включается символ новой строки в виде служебной
	последовательности \n */
	fmt.Print("\n")

	// Форматирование значений ширины - минимальная ширина может задаваться после знака процента в глаголе
	// Первое поле должно иметь минимальную ширину 12 символов, для второго ширина не определена
	fmt.Printf("%12s | %s\n", "Product", "Cost in Cents")
	fmt.Println("----------------------------")
	// Снова минимальная ширина равна 12, второе поле - 3
	fmt.Printf("%12s | %3d\n", "Stamps", 50)
	fmt.Printf("%12s | %3d\n", "Paper Clips", 7)
	fmt.Printf("%12s | %3d\n", "Tape", 101)
	fmt.Print("\n")

	// Форматирование с дробными значениями ширины
	fmt.Printf("%%7.3f: %7.3f\n", 3.1415)
	fmt.Printf("%%7.2f: %7.2f\n", 3.1415)
	fmt.Printf("%%7.1f: %7.1f\n", 3.1415)
	fmt.Printf("%%.1f: %.1f\n", 3.1415)
	fmt.Printf("%%.2f: %.2f\n", 3.1415)
	fmt.Printf("%.2f\n", 1.2600000000000002)
	fmt.Printf("%.2f\n", 1.8198484858984585)

}
